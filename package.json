{
  "name": "rtl-debugger",
  "displayName": "RTL Debugger",
  "description": "Debugger for HDLs supported by the open-source toolchain: Amaranth, Verilog, VHDL, ...",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.84.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/amaranth/rtl-debugger.git"
  },
  "publisher": "yowasp",
  "categories": [
    "Debuggers"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "id": "RTLDebugger",
      "type": "object",
      "title": "RTL Debugger",
      "$comment": "UPSTREAM: Unfortunately there is no way to control the formatting of the extension name within the setting title. See microsoft/vscode#103592",
      "properties": {
        "rtlDebugger.command": {
          "type": [
            "array"
          ],
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "description": "Specifies the command to run when launching a debug session."
        },
        "rtlDebugger.cwd": {
          "type": "string",
          "default": "${workspaceFolder}",
          "description": "Specifies the working directory for the launch command."
        },
        "rtlDebugger.port": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65535,
          "default": 6618,
          "description": "Specifies the port that the CXXRTL agent within the debug session is listening at."
        },
        "rtlDebugger.displayStyle": {
          "enum": [
            "Verilog",
            "VHDL",
            "Python"
          ],
          "default": "Verilog",
          "markdownDescription": "Specifies the display format for variables."
        }
      }
    },
    "commands": [
      {
        "command": "rtlDebugger.startSession",
        "category": "RTL Debugger",
        "title": "Start Session"
      },
      {
        "command": "rtlDebugger.stopSession",
        "category": "RTL Debugger",
        "title": "Stop Session"
      },
      {
        "command": "rtlDebugger.runSimulation",
        "category": "RTL Debugger",
        "title": "Run Simulation"
      },
      {
        "command": "rtlDebugger.runSimulationUntil",
        "category": "RTL Debugger",
        "title": "Run Simulation Until..."
      },
      {
        "command": "rtlDebugger.pauseSimulation",
        "category": "RTL Debugger",
        "title": "Pause Simulation"
      },
      {
        "command": "rtlDebugger.stepForward",
        "category": "RTL Debugger",
        "title": "Step Forward"
      },
      {
        "command": "rtlDebugger.stepBackward",
        "category": "RTL Debugger",
        "title": "Step Backward"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "rtlDebugger",
          "title": "RTL Debugger",
          "icon": "media/chip-debug.svg"
        }
      ]
    },
    "views": {
      "rtlDebugger": [
        {
          "id": "rtlDebugger.hierarchy",
          "name": "Hierarchy"
        },
        {
          "id": "rtlDebugger.variables",
          "name": "Variables"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "rtlDebugger.hierarchy",
        "contents": "The debug session is not running.\n[Start Session](command:rtlDebugger.startSession)",
        "when": "rtlDebugger.sessionStatus == absent"
      },
      {
        "view": "rtlDebugger.hierarchy",
        "contents": "The debug session is initializing...",
        "when": "rtlDebugger.sessionStatus == starting"
      },
      {
        "view": "rtlDebugger.hierarchy",
        "contents": "There are no scopes in the simulation.",
        "when": "rtlDebugger.sessionStatus == running"
      },
      {
        "view": "rtlDebugger.variables",
        "contents": "The selected scope is empty."
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "rtlDebugger.startSession",
          "when": "rtlDebugger.sessionStatus == absent"
        },
        {
          "command": "rtlDebugger.stopSession",
          "when": "rtlDebugger.sessionStatus == running"
        },
        {
          "command": "rtlDebugger.runSimulation",
          "when": "rtlDebugger.sessionStatus == running && rtlDebugger.simulationStatus == paused"
        },
        {
          "command": "rtlDebugger.runSimulationUntil",
          "when": "rtlDebugger.sessionStatus == running && rtlDebugger.simulationStatus == paused"
        },
        {
          "command": "rtlDebugger.pauseSimulation",
          "when": "rtlDebugger.sessionStatus == running && rtlDebugger.simulationStatus == running"
        },
        {
          "command": "rtlDebugger.stepForward",
          "when": "rtlDebugger.sessionStatus == running"
        },
        {
          "command": "rtlDebugger.stepBackward",
          "when": "rtlDebugger.sessionStatus == running"
        }
      ]
    }
  },
  "scripts": {
    "tsc": "tsc -p .",
    "lint": "eslint src --ext ts",
    "esbuild": "npm run esbuild:browser && npm run esbuild:node",
    "esbuild:browser": "esbuild ./src/extension.ts --bundle --outdir=out/browser/ --sourcemap --external:vscode --format=cjs --platform=browser --define:USE_WEB_WORKERS=true",
    "esbuild:browser:watch": "npm run esbuild:browser -- --watch",
    "esbuild:node": "esbuild ./src/extension.ts --bundle --outdir=out/node/ --sourcemap --external:vscode --format=cjs --platform=node --define:USE_WEB_WORKERS=false",
    "esbuild:node:watch": "npm run esbuild:node -- --watch",
    "vscode:prepublish": "npm run esbuild:browser && npm run esbuild:node",
    "browser": "vscode-test-web --coi --browserOption=--remote-debugging-port=9222 --extensionDevelopmentPath=. test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "@types/vscode": "^1.84.0",
    "@typescript-eslint/eslint-plugin": "^6.13.1",
    "@typescript-eslint/parser": "^6.13.1",
    "@vscode/test-cli": "^0.0.4",
    "@vscode/test-electron": "^2.3.8",
    "@vscode/test-web": "^0.0.50",
    "@vscode/vsce": "^3.1.0",
    "esbuild": "^0.19.9",
    "eslint": "^8.54.0",
    "typescript": "^5.3.2",
    "net": "^1.0.2"
  }
}
